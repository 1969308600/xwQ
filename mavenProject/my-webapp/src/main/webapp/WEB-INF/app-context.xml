<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:property-placeholder
		location="classpath:config/jdbc.properties,classpath:config/redis.properties" />

	<import resource="classpath:config/spring-ehcache.xml" />
	<import resource="classpath:config/spring-redis.xml" />

	<context:annotation-config />
	<context:component-scan
		base-package="com.mycompany.app.*"></context:component-scan>

	<!-- spring-jdbc --> 
	<bean id="dataSource_ruili" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url_ruili}" />
		<property name="username" value="${jdbc.username_ruili}" />
		<property name="password" value="${jdbc.password_ruili}" />
		<property name="timeBetweenEvictionRunsMillis" value="3000000" />
		<property name="minEvictableIdleTimeMillis" value="2000000" />
		<property name="minIdle" value="3" />
		<property name="initialSize" value="1" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testWhileIdle" value="true" />
		<!--  借出时不执行validationQuery -->
		<property name="testOnBorrow" value="false" />
		<property name="maxIdle" value="100" />
		<property name="maxActive" value="130" />
	</bean>
	<bean id="dataSource_sys"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="timeBetweenEvictionRunsMillis" value="3000000" />
		<property name="minEvictableIdleTimeMillis" value="2000000" />
		<property name="minIdle" value="3" />
		<property name="initialSize" value="1" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testWhileIdle" value="true" />
		<!--  借出时不执行validationQuery -->
		<property name="testOnBorrow" value="false" />
		<property name="maxIdle" value="100" />
		<property name="maxActive" value="130" />
	</bean>
	<!-- 配置多数据源映射 -->
	<bean id="dataSource" class="com.mycompany.app.common.ChooseDataSource" >
	     <property name="targetDataSources">
	         <map key-type="java.lang.String">
	             <entry value-ref="dataSource_sys" key="dataSource_sys"></entry>
	             <entry value-ref="dataSource_ruili" key="dataSource_ruili"></entry>
	         </map>
	     </property>
	     <!-- 默认数据源 -->
	     <property name="defaultTargetDataSource" ref="dataSource_sys" >
	     </property>
	</bean>
	<!-- dataSource -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="configLocation"
			value="classpath:mybatis.config.xml" />

		<property name="mapperLocations">
			<array>
				<value>classpath:org/mybatis/*.xml</value>
				<value>classpath:org/mybatis/*/*.xml</value>
			</array>
		</property>

		<property name="typeAliasesPackage"
			value="org.mybatis.test,org.mybatis.system" />
	</bean>

	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>



	<!-- FreeMarker模板路径 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!-- <property name="freemarkerSettings" ref="freemarkerConfiguration" 
			/> -->
		<property name="templateLoaderPath">
			<value>/ftl/</value>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
		<property name="defaultEncoding">
			<value>utf-8</value>
		</property>
	</bean>
	<bean id="fmXmlEscape"
		class="freemarker.template.utility.XmlEscape" />
	<bean
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="suffix" value=".html" />
		<property name="order" value="0" />
	</bean>

 
	<!--json中文乱码 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
        	<bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
			<bean
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<!-- <constructor-arg ref="utf8Charset"/> -->
				<!-- <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" 
					/> -->
				<property name="writeAcceptCharset" value="false" /><!-- 用于避免响应头过大 -->
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
						<value>text/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/json;charset=UTF-8</value>
					</list>
				</property>

			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>


	<!--配置拦截器 -->
	<mvc:interceptors>
		<!--拦截器1 -->
		<mvc:interceptor>
			<!--配置拦截器的作用路径 -->
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="" />
			<!--定义在<mvc:interceptor>下面的表示匹配指定路径的请求才进行拦截 -->
			<bean class=" com.mycompany.app.common.InterceptCommon" />
		</mvc:interceptor>
	</mvc:interceptors>


</beans>
 